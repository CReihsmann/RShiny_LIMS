url = 'https://na1.platformforscience.com/609546918/odata/DONOR?$orderby=property asc'
response = GET(url,
authenticate(username,
password,
type = 'basic'))
url = 'https://na1.platformforscience.com/609546918/odata/DONOR?$orderby=property desc'
response = GET(url,
authenticate(username,
password,
type = 'basic'))
url = 'https://na1.platformforscience.com/609546918/odata/DONOR?$limit=NULL'
response = GET(url,
authenticate(username,
password,
type = 'basic'))
response$status_code
url = 'https://na1.platformforscience.com/609546918/odata/DONOR?$limit='
response = GET(url,
authenticate(username,
password,
type = 'basic'))
response$status_code
url = 'https://na1.platformforscience.com/609546918/odata/DONOR?all'
response = GET(url,
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
url = 'https://na1.platformforscience.com/609546918/odata.maxpagesize=1000/DONOR'
response = GET(url,
authenticate(username,
password,
type = 'basic'))
response$status_code
?GET
url = 'https://na1.platformforscience.com/609546918/odata/DONOR'
response = GET(url,
add_headers('odata.maxpagesize'='1000'),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers('maxpagesize'='1000'),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers('maxpagesize'=1000),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers('odata.maxpagesize'=1000),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers('Prefer'='odata.maxpagesize=1000'),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
url = 'https://na1.platformforscience.com/609546918/odata/DONOR'
username <- 'chunhua.dai@vanderbilt.edu'
password <- 'Core#2017'
response = GET(url,
add_headers('Prefer'='odata.maxpagesize=1000'),
authenticate(username,
password,
type = 'basic'))
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers(.headers = c('Prefer'='odata.maxpagesize=1000')),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers('Prefer'='odata.maxpagesize=1000'),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers(.headers = c('Content-Type' = 'application/json;odata.metadata=minimal;charset=UTF-8',
'Prefer'='odata.maxpagesize=1000')),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
response = GET(url,
add_headers(.headers = c('Content-Type' = 'application/json;odata.metadata=minimal;charset=UTF-8',
'tenantId', 'Vanderbilt University PROD',
'Prefer'='odata.maxpagesize=1000')),
authenticate(username,
password,
type = 'basic'))
response$status_code
response = GET(url,
add_headers(.headers = c('Content-Type' = 'application/json;odata.metadata=minimal;charset=UTF-8',
'tenantId', 'Vanderbilt University PROD',
'Prefer'='odata.maxpagesize=1000')),
authenticate(username,
password,
type = 'basic'))
response$status_code
response = GET(url,
add_headers(.headers = c('Content-Type' = 'application/json;odata.metadata=minimal;charset=UTF-8',
'Prefer'='odata.maxpagesize=1000')),
authenticate(username,
password,
type = 'basic'))
response$status_code
data[1]
data[2]
response = GET(url,
add_headers(.headers = c('Content-Type' = 'application/json;odata.metadata=minimal;charset=UTF-8',
Prefer='odata.maxpagesize=1000')),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
test <- data[2]
View(test)
data[2]
data[[2]]
test <- data[[2]]
View(test)
response = GET(url,
add_headers(.headers = c('Content-Type' = 'application/json;odata.metadata=minimal;charset=UTF-8')),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
test <- data[[2]]
response = GET(url,
add_headers(.headers = c('Content-Type' = 'application/json;odata.metadata=minimal;charset=UTF-8',
'Prefer'='odata.maxpagesize=1000')),
authenticate(username,
password,
type = 'basic'))
response$status_code
data <- content(response, as = 'text') %>%
fromJSON()
class(data)
class(data[[2]])
class(data[2)
class(data[2])
test <- data[[2]]
test %>%
colnames()
lims_data <- data[[2]]
View(lims_data)
api_data <- data[[2]]
select_data < api_data[colSums(!is.na(api_data)) > 0]
select_data <- api_data[colSums(!is.na(api_data)) > 0]
View(select_data)
select_data <-
select(colSums(!is.na(api_data)) > 0)
select_data <- api_data
select_data <- api_data %>%
select(colSums(!is.na(api_data)) > 0)
select(where(~sum(!is.na(.x)) > 0))
library(tidyverse)
select_data <- api_data
select_data <- api_data %>%
select(
where(
~sum(!is.na(.x)) > 0
)
)
select_data <- api_data %>%
select(where(~sum(!is.na(.x)) > 0)) %>%
select(-c(DONOR, Id, Sequence, Created, Modified, Active, LikedBy, FollowedBy, Locked, DONOR_CREATED, `HLA_DOCUMENT@odata.mediaContentType`))
select_data <- api_data %>%
select(where(~sum(!is.na(.x)) > 0)) %>%
select(-c(EntityTypeName, Id, Sequence, Created, Modified, Active, LikedBy, FollowedBy, Locked, DONOR_CREATED, `HLA_DOCUMENT@odata.mediaContentType`))
shiny::runApp('Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp()
setwd("~/Documents/EDA/RShiny_LIMS/notebooks")
lims_data <- read_csv('../data/20221207-fixed_cols.csv')
graph_cols <- c('DATE_PANCREAS_ISLET_RECEIVED','ISLETS_ISOLATION_CENTER','CI_DONOR_RACE',
'CI_DONOR_DISEASE','CI_DONOR_GENDER','AGE_IN_YEARS', 'CI_DONOR_BMI_MANUAL')
test <- graph_data %>%
filter(!is.na(ISLETS_ISOLATION_CENTER)) %>%
group_by(ISLETS_ISOLATION_CENTER) %>%
summarise(centers = n())
graph_data <- lims_data %>%
select(contains(graph_cols)) %>%
mutate(AGE_GROUPS = if_else((AGE_IN_YEARS > 0&AGE_IN_YEARS <= 10), '1-10',
if_else((AGE_IN_YEARS > 10&AGE_IN_YEARS <= 20), '11-20',
if_else((AGE_IN_YEARS > 20&AGE_IN_YEARS <= 30), '21-30',
if_else((AGE_IN_YEARS > 30&AGE_IN_YEARS <= 40), '31-40',
if_else((AGE_IN_YEARS > 40&AGE_IN_YEARS <= 50), '41-50',
if_else((AGE_IN_YEARS > 50&AGE_IN_YEARS <= 60), '51-60',
if_else((AGE_IN_YEARS > 60&AGE_IN_YEARS <= 70), '61-70',
if_else((AGE_IN_YEARS > 70&AGE_IN_YEARS <= 80), '71-80',
if_else((AGE_IN_YEARS > 80&AGE_IN_YEARS <= 90), '81-90',
if_else((AGE_IN_YEARS > 90&AGE_IN_YEARS <= 100), '91-100', 'NA'))))))))))) %>%
mutate(YEAR = as.character(year(DATE_PANCREAS_ISLET_RECEIVED)))
lims_data <- read_csv('../data/20221207-fixed_cols.csv')
graph_cols <- c('DATE_PANCREAS_ISLET_RECEIVED','ISLETS_ISOLATION_CENTER','CI_DONOR_RACE',
'CI_DONOR_DISEASE','CI_DONOR_GENDER','AGE_IN_YEARS', 'CI_DONOR_BMI_MANUAL')
graph_data <- lims_data %>%
select(contains(graph_cols)) %>%
mutate(AGE_GROUPS = if_else((AGE_IN_YEARS > 0&AGE_IN_YEARS <= 10), '1-10',
if_else((AGE_IN_YEARS > 10&AGE_IN_YEARS <= 20), '11-20',
if_else((AGE_IN_YEARS > 20&AGE_IN_YEARS <= 30), '21-30',
if_else((AGE_IN_YEARS > 30&AGE_IN_YEARS <= 40), '31-40',
if_else((AGE_IN_YEARS > 40&AGE_IN_YEARS <= 50), '41-50',
if_else((AGE_IN_YEARS > 50&AGE_IN_YEARS <= 60), '51-60',
if_else((AGE_IN_YEARS > 60&AGE_IN_YEARS <= 70), '61-70',
if_else((AGE_IN_YEARS > 70&AGE_IN_YEARS <= 80), '71-80',
if_else((AGE_IN_YEARS > 80&AGE_IN_YEARS <= 90), '81-90',
if_else((AGE_IN_YEARS > 90&AGE_IN_YEARS <= 100), '91-100', 'NA'))))))))))) %>%
mutate(YEAR = as.character(year(DATE_PANCREAS_ISLET_RECEIVED)))
test <- graph_data %>%
filter(!is.na(ISLETS_ISOLATION_CENTER)) %>%
group_by(ISLETS_ISOLATION_CENTER) %>%
summarise(centers = n())
test_2 <- graph_data %>%
filter(is.na(ISLETS_ISOLATION_CENTER)) %>%
mutate(ISLETS_ISOLATION_CENTER = replace_na(ISLETS_ISOLATION_CENTER, 'NA')) %>%
group_by(ISLETS_ISOLATION_CENTER) %>%
summarise(centers = n())
plot_ly() %>%
add_trace(y = ~test$ISLETS_ISOLATION_CENTER, x = ~test$centers, type = 'bar', color = ~test$ISLETS_ISOLATION_CENTER,
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
colors = 'Set1') %>%
add_trace(y = ~test_2$ISLETS_ISOLATION_CENTER, x = ~test_2$centers, type = 'bar', color = ~test_2$ISLETS_ISOLATION_CENTER,
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
marker = list(color = '#79cdcd')) %>%
layout(barmode = ('stack'),
plot_bgcolor = '#F5F5F5')
plot_ly() %>%
add_trace(y = ~test$ISLETS_ISOLATION_CENTER, x = ~test$centers, type = 'bar', color = ~test$ISLETS_ISOLATION_CENTER,
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
colors = 'Set1') %>%
# add_trace(y = ~test_2$ISLETS_ISOLATION_CENTER, x = ~test_2$centers, type = 'bar', color = ~test_2$ISLETS_ISOLATION_CENTER,
#           hovertemplate = paste(
#             '<b><i>Count</i>: %{x}'
#           ),
#           marker = list(color = '#79cdcd')) %>%
layout(barmode = ('stack'),
plot_bgcolor = '#F5F5F5')
plot_ly() %>%
add_trace(y = ~test$ISLETS_ISOLATION_CENTER, x = ~test$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
colors = 'Set1') %>%
# add_trace(y = ~test_2$ISLETS_ISOLATION_CENTER, x = ~test_2$centers, type = 'bar', color = ~test_2$ISLETS_ISOLATION_CENTER,
#           hovertemplate = paste(
#             '<b><i>Count</i>: %{x}'
#           ),
#           marker = list(color = '#79cdcd')) %>%
layout(barmode = ('stack'),
plot_bgcolor = '#F5F5F5')
plot_ly() %>%
add_trace(y = ~test$ISLETS_ISOLATION_CENTER, x = ~test$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
colors = 'Set1') %>%
add_trace(y = ~test_2$ISLETS_ISOLATION_CENTER, x = ~test_2$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
marker = list(color = '#79cdcd')) %>%
layout(barmode = ('stack'),
plot_bgcolor = '#F5F5F5')
test <- graph_data %>%
# filter(!is.na(ISLETS_ISOLATION_CENTER)) %>%
group_by(ISLETS_ISOLATION_CENTER) %>%
summarise(centers = n())
plot_ly() %>%
add_trace(y = ~test$ISLETS_ISOLATION_CENTER, x = ~test$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
colors = 'Set1') %>%
# add_trace(y = ~test_2$ISLETS_ISOLATION_CENTER, x = ~test_2$centers, type = 'bar',
#           hovertemplate = paste(
#             '<b><i>Count</i>: %{x}'
#           ),
#           marker = list(color = '#79cdcd')) %>%
layout(barmode = ('stack'),
plot_bgcolor = '#F5F5F5')
test <- graph_data %>%
filter(!is.na(ISLETS_ISOLATION_CENTER)) %>%
group_by(ISLETS_ISOLATION_CENTER) %>%
summarise(centers = n())
test_2 <- graph_data %>%
filter(is.na(ISLETS_ISOLATION_CENTER)) %>%
mutate(ISLETS_ISOLATION_CENTER = replace_na(ISLETS_ISOLATION_CENTER, 'NA')) %>%
group_by(ISLETS_ISOLATION_CENTER) %>%
summarise(centers = n())
plot_ly() %>%
add_trace(y = ~test$ISLETS_ISOLATION_CENTER, x = ~test$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
colors = 'Set1') %>%
add_trace(y = ~test_2$ISLETS_ISOLATION_CENTER, x = ~test_2$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
marker = list(color = '#79cdcd')) %>%
layout(barmode = ('stack'),
plot_bgcolor = '#F5F5F5')
plot_ly() %>%
add_trace(y = ~test$ISLETS_ISOLATION_CENTER, x = ~test$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
colors = 'Set1',
name = 'ISLET_ISOLATION_CENTER') %>%
add_trace(y = ~test_2$ISLETS_ISOLATION_CENTER, x = ~test_2$centers, type = 'bar',
hovertemplate = paste(
'<b><i>Count</i>: %{x}'
),
marker = list(color = '#79cdcd'),
name = 'NA') %>%
layout(barmode = ('stack'),
plot_bgcolor = '#F5F5F5')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp()
runApp()
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
col_conv$LIMS_col
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
runApp('~/Documents/EDA/RShiny_LIMS/LIMS_Data')
numeric_cols <- lims_data %>%
select(is.numeric()) %>%
colnames()
numeric_cols <- lims_data %>%
select(where(is.numeric)) %>%
colnames()
test <- lims_data %>%
select(numeric_cols, graph_cols)
test <- lims_data %>%
select(numeric_cols, graph_cols) %>%
select(!is.Date())
select(!where(is.Date)
test <- lims_data %>%
select(numeric_cols, graph_cols) %>%
select(!where(is.Date))
test <- lims_data %>%
select(numeric_cols, graph_cols) %>%
select(!where(is.Date))
test %>%
ggplot(aes(x=CI_DONOR_AGE)) +
geom_histogram()
test %>%
ggplot(aes(x=CI_DONOR_AGE, fill = ISLETS_ISOLATION_CENTER)) +
geom_histogram()
test %>%
ggplot(aes(x=CI_DONOR_AGE, fill = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50)
?geom_histogram
test %>%
ggplot(aes(x=CI_DONOR_AGE, fill = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'stack')
test %>%
ggplot(aes(x=CI_DONOR_AGE, fill = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity')
test %>%
ggplot(aes(x=CI_DONOR_AGE, fill = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)
test %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_brewer(palette = 'Dark2')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'stack', alpha = 0.5)+
scale_color_brewer(palette = 'Dark2')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'stack', alpha = 0.5)+
scale_color_brewer(palette = 'Set1')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'stack', alpha = 0.5)+
scale_color_brewer(palette = 'Set1')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_brewer(palette = 'Set2')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_brewer(palette = 'Dark1')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_brewer(palette = 'Dark2')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_brewer(palette = 'inferno')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_discrete(palette = 'Set1')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_brewer(palette = 'Set1')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_viridis_d(palette = 'inferno')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'identity', alpha = 0.5)+
scale_color_viridis_d()
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'dodge', alpha = 0.5)+
scale_color_viridis_d()
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = ISLETS_ISOLATION_CENTER)) +
geom_histogram(bins = 50, position = 'dodge', alpha = 0.5)+
scale_color_viridis_d(option = 'magma')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'dodge', alpha = 0.5)+
scale_color_viridis_d(option = 'magma')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'dodge', alpha = 0.5, fill = 'white')+
scale_color_viridis_d(option = 'magma')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'dodge', alpha = 0.5, fill = 'white')+
scale_color_viridis_d(option = 'magma') +theme_minimal()
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'dodge', alpha = 0.5)+
scale_color_viridis_d(option = 'magma') +
scale_fill_viridis_d(option = 'magma')
test %>%
filter(CI_DONOR_GENDER != 'Unknown') %>%
ggplot(aes(x=CI_DONOR_AGE, color = CI_DONOR_GENDER)) +
geom_histogram(bins = 50, position = 'dodge', alpha = 0.5, fill = 'magma')+
scale_color_viridis_d(option = 'magma') +
scale_fill_viridis_d(option = 'magma')
